# for local dev env setup
#  docker compose -f docker-compose-dev.yml up -d
services:
  # docker-compose up -d  consul
  consul:
    image: hashicorp/consul:latest
    container_name: consul
    ports:
      - "8500:8500"      # Consul UI & API Port
      - "8600:8600/udp"  # Consul DNS  Port
    command: "agent -dev -client=0.0.0.0"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8500/v1/status/leader" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend

  # docker-compose up -d  envoy
  envoy:
    image: envoyproxy/envoy:v1.26.0
    container_name: envoy
    ports:
      - "10000:10000"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:10000 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./gateway/envoy.yaml:/etc/envoy/envoy.yaml:ro  # Envoy config YML file
    command: /usr/local/bin/envoy -c /etc/envoy/envoy.yaml --log-level info
    networks:
      - backend
    depends_on:
      - consul

  mysql:
    image: mysql:8.0
    container_name: link-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: link
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "admin", "-padmin" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend

  redis:
    image: redis:7.0
    container_name: redis-cache
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - redis_data:/data
    networks:
      - backend

  # Prometheus for collecting monitor metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./monitor/config/prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
    ports:
      - "9090:9090"
    depends_on:
      - redis
      - mysql
      - consul
      - envoy
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:9090/-/ready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Grafana for showing prometheus collected & stored on UI dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 1024M
        reservations:
          cpus: "1.5"
          memory: 512M
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - backend
    volumes:
      - grafana_data:/var/lib/grafana
  # exporters
  mysqld_exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysqld_exporter
    ports:
      - "9104:9104" # default port for MySQL Exporter
    volumes:
      - ./monitor/config/my.cnf:/etc/mysqld_exporter/my.cnf:ro
    command: --config.my-cnf=/etc/mysqld_exporter/my.cnf
    depends_on:
      - mysql
    networks:
      - backend

  redis_exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis_exporter
    ports:
      - "9121:9121" # default Redis Exporter port
    environment:
      - REDIS_ADDR=redis-cache:6379
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9121/metrics || exit 1" ]
      interval: 10s
      retries: 5
      timeout: 5s
    depends_on:
      - redis
    networks:
      - backend

  consul_exporter:
    image: prom/consul-exporter:latest
    container_name: consul_exporter
    ports:
      - "9107:9107" # default port for Consul Exporter
    environment:
      - CONSUL_URI=http://consul:8500
    depends_on:
      - consul
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9107/metrics || exit 1" ]
      interval: 10s
      retries: 5

volumes:
  mysql_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  backend: