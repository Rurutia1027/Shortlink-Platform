# for local dev env setup

services:
  # docker-compose up -d  consul
  consul:
    image: hashicorp/consul:latest
    container_name: consul
    ports:
      - "8500:8500"      # Consul UI & API Port
      - "8600:8600/udp"  # Consul DNS  Port
    command: "agent -dev -client=0.0.0.0"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8500/v1/status/leader" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend
    restart: unless-stopped

  # docker-compose up -d  envoy
  envoy:
    image: envoyproxy/envoy:v1.26.0
    container_name: envoy
    ports:
      - "10000:10000"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:10000 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./gateway/envoy.yaml:/etc/envoy/envoy.yaml:ro  # Envoy config YML file
    networks:
      - backend
    depends_on:
      - consul
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: link-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: link
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "admin", "-padmin" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend

  redis:
    image: redis:7.0
    container_name: redis-cache
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - redis_data:/data
    networks:
      - backend

volumes:
  mysql_data:
  redis_data:

networks:
  backend: