# for prod local and k8s deployment
#  docker compose -f docker-compose-docker.yml up -d
services:
  # docker-compose up -d  consul
  consul:
    image: hashicorp/consul:latest
    container_name: consul
    ports:
      - "8500:8500"      # Consul UI & API Port
      - "8600:8600/udp"  # Consul DNS  Port
    command: "agent -dev -client=0.0.0.0"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://consul:8500/v1/status/leader" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend-deploy
    restart: unless-stopped

  # docker-compose up -d  envoy
  envoy:
    image: envoyproxy/envoy:v1.26.0
    container_name: envoy
    ports:
      - "10000:10000"
      - "9901:9901"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://envoy:10000 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./gateway/envoy-docker.yaml:/etc/envoy/envoy.yaml:ro
    command: /usr/local/bin/envoy -c /etc/envoy/envoy.yaml --log-level info
    networks:
      - backend-deploy
    depends_on:
      - consul
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: link
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "mysql", "-u", "admin", "-padmin" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql_data_deploy:/var/lib/mysql
    networks:
      - backend-deploy

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - redis_data_deploy:/data
    networks:
      - backend-deploy
    restart: unless-stopped

  # prometheus for collecting monitor metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus_data_deploy:/prometheus
      - ./monitor/config/prometheus-docker.yaml:/etc/prometheus/prometheus.yaml
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
    ports:
      - "9090:9090"
    depends_on:
      - mysql
      - redis
      - consul
      - envoy
      - shortlink-gateway
      - shortlink-aggregation
    networks:
      - backend-deploy
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://prometheus:9090/-/ready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - backend-deploy
    volumes:
      - grafana_data_deploy:/var/lib/grafana
    restart: unless-stopped

  mysqld_exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysqld_exporter
    volumes:
      - ./monitor/config/my-docker.cnf:/etc/mysqld_exporter/my.cnf:ro
    command: --config.my-cnf=/etc/mysqld_exporter/my.cnf
    ports:
      - "9104:9104" # default port for MySQL Exporter
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://mysqld_exporter:9104/metrics || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - mysql
    networks:
      - backend-deploy
    restart: unless-stopped

  redis_exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis_exporter
    ports:
      - "9121:9121" # default Redis Exporter port
    environment:
      - REDIS_ADDR=redis-cache:6379
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://redis_exporter:9121/metrics || exit 1" ]
      interval: 10s
      retries: 5
      timeout: 5s
    depends_on:
      - redis
    networks:
      - backend-deploy
    restart: unless-stopped

  consul_exporter:
    image: prom/consul-exporter:latest
    container_name: consul_exporter
    ports:
      - "9107:9107" # default port for Consul Exporter
    environment:
      - CONSUL_URI=http://consul:8500
    depends_on:
      - consul
    networks:
      - backend-deploy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://consul_exporter:9107/metrics || exit 1" ]
      interval: 10s
      retries: 5

  shortlink-gateway:
    image: nanachi1027/shortlink-gateway:latest
    container_name: shortlink-gateway
    ports:
      - "8000:8000"
    networks:
      - backend-deploy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql
      - redis
      - consul
      - envoy
      - prometheus
    restart: unless-stopped

  shortlink-aggregation:
    image: nanachi1027/shortlink-aggregation:latest
    container_name: shortlink-aggregation
    ports:
      - "8003:8003"
    networks:
      - backend-deploy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mysql
      - redis
      - consul
      - envoy
      - prometheus
    restart: unless-stopped

volumes:
  mysql_data_deploy:
  redis_data_deploy:
  prometheus_data_deploy:
  grafana_data_deploy:

networks:
  backend-deploy: